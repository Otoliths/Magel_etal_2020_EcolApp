ki_full$Family[ki_full$Species == "Cirripectes auritus"] <- "Blenniidae"
# ki_full$Family[ki_full$Species == "Cirripectes sp."] <- "Blenniidae"
ki_full$Family[ki_full$Species == "Echidna unicolor"] <- "Muraenidae"
ki_full$Family[ki_full$Species == "Epinephelus sp."] <- "Serranidae"
ki_full$Family[ki_full$Species == "Eviota cometa"] <- "Gobiidae"
ki_full$Family[ki_full$Species == "Gnatholepis anjerensis"] <- "Gobiidae"
ki_full$Family[ki_full$Species == "Gymnothorax thyrsoideus"] <- "Muraenidae"
ki_full$Family[ki_full$Species == "Halichoeres sp."] <- "Labridae"
ki_full$Family[ki_full$Species == "Halichoeres chrysus"] <- "Labridae"
ki_full$Family[ki_full$Species == "Iniistius auropunctatus"] <- "Labridae"
ki_full$Family[ki_full$Species == "Kyphosus sp"] <- "Kyphosidae"
ki_full$Family[ki_full$Species == "Neosynchiropus ocellatus"] <- "Callionymidae"
ki_full$Family[ki_full$Species == "Ostorhinchus angustatus"] <- "Apogonidae"
ki_full$Family[ki_full$Species == "Ostorhinchus apogonoides"] <- "Apogonidae"
ki_full$Family[ki_full$Species == "Parapercis lata"] <- "Pinguipedidae"
ki_full$Family[ki_full$Species == "Parapercis sp."] <- "Pinguipedidae"
ki_full$Family[ki_full$Species == "Plagiotremus sp."] <- "Blenniidae"
ki_full$Family[ki_full$Species == "Priacanthus hamrur"] <- "Priacanthidae"
ki_full$Family[ki_full$Species == "Pseudanthias sp"] <- "Serranidae"
ki_full$Family[ki_full$Species == "Ptereleotris sp"] <- "Microdesmidae"
ki_full$Family[ki_full$Species == "Pterocaesio sp."] <- "Caesionidae"
ki_full$Family[ki_full$Species == "Pterocaesio lativittata"] <- "Caesionidae"
ki_full$Family[ki_full$Species == "Pterois sp."] <- "Scorpaenidae"
ki_full$Family[ki_full$Species == "Sebastapistes cyanostigma"] <- "Scorpaenidae"
ki_full$Family[ki_full$Species == "Synodus jaculum"] <- "Synodontidae"
ki_full$Family[ki_full$Species == "Synodus sp."] <- "Synodontidae"
ki_full$Family[ki_full$Species == "Valenciennea sp."] <- "Gobiidae"
ki_full$Family[ki_full$Species == "Valenciennea helsdingenii"] <- "Gobiidae"
unique(ki_full$Species[is.na(ki_full$Family)])
### Add functional group data
ki_full$CoarseFG <- as.character(trophic$CoarseFG[match(ki_full$Species, trophic$CREDSpecies)])
ki_full$FineFG <- as.character(trophic$FineFG[match(ki_full$Species, trophic$CREDSpecies)])
# Add in CoarseFG info for species not in 'trophic' dataset
dim(ki_full[is.na(ki_full$CoarseFG),])
unique(ki_full$Species[is.na(ki_full$CoarseFG)])
ki_full$CoarseFG[ki_full$Species == "Arothron caeruleopunctatus"] <- "Omnivore"
ki_full$CoarseFG[ki_full$Species == "Bothus pantherinus"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Chlorurus sp."] <- "Herbivore"
ki_full$CoarseFG[ki_full$Species == "Chromis atripes"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Cirripectes auritus"] <- "Herbivore"
# ki_full$CoarseFG[ki_full$Species == "Cirripectes sp."] <- "Herbivore"
ki_full$CoarseFG[ki_full$Species == "Echidna unicolor"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Epinephelus sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Eviota cometa"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Gnatholepis anjerensis"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Gobiidae sp"] <- "NA"
ki_full$CoarseFG[ki_full$Species == "Gymnothorax thyrsoideus"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Halichoeres sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Halichoeres chrysus"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Iniistius auropunctatus"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Kyphosus sp"] <- "Herbivore"
ki_full$CoarseFG[ki_full$Species == "Naso sp"] <- "NA"
ki_full$CoarseFG[ki_full$Species == "Neosynchiropus ocellatus"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Ostorhinchus angustatus"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Ostorhinchus apogonoides"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Parapercis sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Plagiotremus sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Priacanthus hamrur"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Pseudanthias sp"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Ptereleotris sp"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Pterocaesio sp."] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Pterocaesio lativittata"] <- "Planktivore"
ki_full$CoarseFG[ki_full$Species == "Pterois sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Sebastapistes cyanostigma"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Synodus jaculum"] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Synodus sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Valenciennea sp."] <- "Carnivore"
ki_full$CoarseFG[ki_full$Species == "Valenciennea helsdingenii"] <- "Carnivore"
# Too much variation within Family/genus to assign CoarseFG to Gobiidae sp or Naso sp
unique(ki_full$Species[is.na(ki_full$CoarseFG)])
# Add in FineFG info for species not in 'trophic' dataset
unique(ki_full$Species[is.na(ki_full$FineFG)])
ki_full$FineFG[ki_full$Species == "Acanthurus sp"] <- "Cropper"
ki_full$FineFG[ki_full$Species == "Arothron caeruleopunctatus"] <- "Benthic intertivore"
ki_full$FineFG[ki_full$Species == "Bothus pantherinus"] <- "Piscivore"
ki_full$FineFG[ki_full$Species == "Chlorurus sp."] <- "Excavator"
ki_full$FineFG[ki_full$Species == "Chromis atripes"] <- "Diurnal planktivore"
ki_full$FineFG[ki_full$Species == "Cirripectes auritus"] <- "Cropper"
# ki_full$FineFG[ki_full$Species == "Cirripectes sp."] <- "Cropper"
ki_full$FineFG[ki_full$Species == "Echidna unicolor"] <- "Invertivore"
ki_full$FineFG[ki_full$Species == "Epinephelus sp."] <- "Diurnal piscivore"
ki_full$FineFG[ki_full$Species == "Eviota cometa"] <- "Generalist carnivore"
ki_full$FineFG[ki_full$Species == "Gnatholepis anjerensis"] <- "Benthic omnivore"
ki_full$FineFG[ki_full$Species == "Gobiidae sp"] <- "NA"
ki_full$FineFG[ki_full$Species == "Gymnothorax thyrsoideus"] <- "Piscivore"
ki_full$FineFG[ki_full$Species == "Halichoeres sp."] <- "Invertivore"
ki_full$FineFG[ki_full$Species == "Halichoeres chrysus"] <- "Invertivore"
ki_full$FineFG[ki_full$Species == "Iniistius auropunctatus"] <- "Generalist carnivore"
ki_full$FineFG[ki_full$Species == "Kyphosus sp"] <- "Browser"
ki_full$FineFG[ki_full$Species == "Labridae sp"] <- "NA"
ki_full$FineFG[ki_full$Species == "Naso sp"] <- "NA"
ki_full$FineFG[ki_full$Species == "Neosynchiropus ocellatus"] <- "Invertivore"
ki_full$FineFG[ki_full$Species == "Ostorhinchus angustatus"] <- "Nocturnal planktivore"
ki_full$FineFG[ki_full$Species == "Ostorhinchus apogonoides"] <- "Nocturnal planktivore"
ki_full$FineFG[ki_full$Species == "Parapercis sp."] <- "Generalist carnivore"
ki_full$FineFG[ki_full$Species == "Plagiotremus sp."] <- "Diurnal piscivore"
ki_full$FineFG[ki_full$Species == "Priacanthus hamrur"] <- "Nocturnal planktivore"
ki_full$FineFG[ki_full$Species == "Pseudanthias sp"] <- "Diurnal planktivore"
ki_full$FineFG[ki_full$Species == "Ptereleotris sp"] <- "Diurnal planktivore"
ki_full$FineFG[ki_full$Species == "Pterocaesio sp."] <- "Diurnal planktivore"
ki_full$FineFG[ki_full$Species == "Pterocaesio lativittata"] <- "Diurnal planktivore"
ki_full$FineFG[ki_full$Species == "Pterois sp."] <- "Generalist carnivore"
ki_full$FineFG[ki_full$Species == "Sebastapistes cyanostigma"] <- "Generalist carnivore"
ki_full$FineFG[ki_full$Species == "Synodus jaculum"] <- "Diurnal piscivore"
ki_full$FineFG[ki_full$Species == "Synodus sp."] <- "Diurnal piscivore"
ki_full$FineFG[ki_full$Species == "Valenciennea sp."] <- "Invertivore"
ki_full$FineFG[ki_full$Species == "Valenciennea helsdingenii"] <- "Invertivore"
# Too much variation within Family/genus to assign FineFG to Gobiidae sp, Labridae sp, Naso sp
unique(ki_full$Species[is.na(ki_full$FineFG)])
# Specify corallivore groupings (oblivate vs. facultative)
unique(ki_full$Species[ki_full$FineFG == "Corallivore"])
# ki_full$FineFG[ki_full$Species == "Amanses scopas"] <- "corallivore"
ki_full$FineFG[ki_full$Species == "Arothron meleagris"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Cantherhines dumerilii"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon auriga"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon bennetti"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon citrinellus"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon ephippium"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon kleinii"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon lunulatus"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon meyeri"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon ornatissimus"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon pelewensis"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon quadrimaculatus"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon trifascialis"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon unimaculatus"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Chaetodon vagabundus"] <- "Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Heniochus chrysostomus"] <- " Facultative corallivore"
ki_full$FineFG[ki_full$Species == "Labrichthys unilineatus"] <- "Obligate corallivore"
ki_full$FineFG[ki_full$Species == "Plectroglyphidodon johnstonianus"] <- "Obligate corallivore"
unique(ki_full$Species[is.na(ki_full$FineFG)])
### Now add mass estimates
# Add mass values from length-weight relationships
ki_full$length <- ki_full$Size..cm.*ki_full$LENGTH_CONVERSION_FACTOR
ki_full$MASS <- round(with(ki_full, lw_a*(length)^lw_b), digits = 2)
dim(ki_full[is.na(ki_full$MASS), ])
unique(ki_full$Species[is.na(ki_full$MASS)])
### Add site data
sites <- read.csv("ki_sites_RT_updatedFP.csv")
head(sites)
ki_full$f.pressure <- factor(sites$f.pressure[match(ki_full$Site, sites$site)])
ki_full$lat <- sites$lat[match(ki_full$Site, sites$site)]
ki_full$lon <- sites$lon[match(ki_full$Site, sites$site)]
ki_full$prod <- sites$smw.prod[match(ki_full$Site, sites$site)]
### Fix dates
ki_full$KI.Date[ki_full$KI.Date == "21.08.2011"] <- "21_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "23.07.2011"] <- "23_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "24.07.2011"] <- "24_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "25.07.2011"] <- "25_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "27.07.2011"] <- "27_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "28.07.2011"] <- "28_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "29.07.2011"] <- "29_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "29.08.2011"] <- "29_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "30.07.2011"] <- "30_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "31.07.2011"] <- "31_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "01.08.2011"] <- "01_08_2011"
ki_full$KI.Date[ki_full$KI.Date == "23/07/11"] <- "23_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "24/07/11"] <- "24_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "25/07/11"] <- "25_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "27/07/11"] <- "27_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "28/07/11"] <- "28_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "29/07/11"] <- "29_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "30/07/11"] <- "30_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "31/07/11"] <- "31_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "01/08/11"] <- "01_08_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2023"] <- "23_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2024"] <- "24_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2025"] <- "25_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2026"] <- "26_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2027"] <- "27_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2028"] <- "28_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/2029"] <- "29_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/1930"] <- "30_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "7/11/1931"] <- "31_07_2011"
ki_full$KI.Date[ki_full$KI.Date == "8/11/2001"] <- "01_08_2011"
ki_full$KI.Date[ki_full$KI.Date == "21_07_13"] <- "21_07_2013"
ki_full$KI.Date[ki_full$KI.Date == "22_07_13"] <- "22_07_2013"
ki_full$KI.Date[ki_full$KI.Date == "24_07_13"] <- "24_07_2013"
ki_full$KI.Date[ki_full$KI.Date == "25_07_13"] <- "25_07_2013"
ki_full$KI.Date[ki_full$KI.Date == "4_07_2015"] <- "04_07_2015"
ki_full$KI.Date[ki_full$KI.Date == "5_07_2015"] <- "05_07_2015"
ki_full$KI.Date[ki_full$KI.Date == " 06_07_2015"] <- "06_07_2015"
unique(ki_full$KI.Date)
### Create unique codes for each date/site/transect combo
ki_full$unique.site <- paste(ki_full$KI.Date, ki_full$Transect, ki_full$Site, sep = "_")
unique(ki_full$unique.site)
### Clean survey times
unique(ki_full$Time)
library(stringr)
ki_full$time_h <- str_split_fixed(ki_full$Time, ":", 2)[,1]
ki_full$time_m <- str_split_fixed(ki_full$Time, ":", 2)[,2]
ki_full$survey_time <- paste(ki_full$time_h, ki_full$time_m, sep = "")
ki_full <- ki_full[order(ki_full$survey_time), ]
unique(ki_full$survey_time)
ki_full$survey_time[ki_full$survey_time == "121"] <- "1321"
ki_full$survey_time[ki_full$survey_time == "1558:00"] <- "1558"
ki_full$survey_time <- as.numeric(ki_full$survey_time)
# Assign to time-of-day categories
ki_full$time_of_day <- NULL
ki_full$time_of_day[ki_full$survey_time < 930] <- "MORN"
ki_full$time_of_day[ki_full$survey_time >= 930 & ki_full$survey_time < 1230] <- "MID"
ki_full$time_of_day[ki_full$survey_time >= 1230 & ki_full$survey_time < 1530] <- "AFT"
ki_full$time_of_day[ki_full$survey_time >= 1530] <- "LATE"
dim(ki_full[is.na(ki_full$time_of_day), ])
## Remove surveys from 2017 where only 2 transects were completed (site surveyed twice on the same day)
ki_full <- ki_full[!(ki_full$KI.Date == "29_07_2017" & ki_full$Site == "15" & ki_full$time_of_day == "MID"), ]
### Get variables in the correct class
head(ki_full)
str(ki_full)
ki_full$Site <- as.factor(ki_full$Site)
ki_full$Observer <- as.factor(ki_full$Observer)
ki_full$Transect <- as.factor(ki_full$Transect)
ki_full$Year <- as.factor(ki_full$Year)
ki_full$f.pressure <- as.factor(ki_full$f.pressure)
### Remove data from 2018 surveys
ki_full <- ki_full[!grepl("2018", ki_full$Year), ]
### Check sample sizes for each site
ki_full$site.date <- with(ki_full, paste(KI.Date, Site, sep = "."))
samples <- ki_full %>% group_by(site.date) %>% summarise(count = n_distinct(Transect))
low.samps <- samples[samples$count <3, ]
# Remove anything with fewer than 3 transects (removes 305 rows)
ki_full <- ki_full[!(ki_full$site.date %in% low.samps$site.date),]
### Check that 2 divers were at all sites
obs <- ki_full %>% group_by(site.date) %>% summarise(count = n_distinct(Observer))
low.obs <- obs[obs$count <2, ]
# Remove anything with fewer than 2 observers
ki_full <- ki_full[!(ki_full$site.date %in% low.obs$site.date),]
### Add heat stress variable
ki_full$heat <- NA
ki_full$heat[ki_full$Year == "2011"] <- "Before"
ki_full$heat[ki_full$Year == "2013"] <- "Before"
ki_full$heat[ki_full$Year == "2015"] <- "During"
ki_full$heat[ki_full$Year == "2017"] <- "After"
ki_full$heat <- as.factor(ki_full$heat)
ki_full$heat <- factor(ki_full$heat, levels(factor(ki_full$heat))[c(2,3,1)])
### Consolidate to 10 functional groups (carnivores split into fine FGs)
ki_full$Trophic <- NULL
# Corallivores
ki_full$Trophic[ki_full$FineFG == "Corallivore"] <- "Corallivore"
ki_full$Trophic[ki_full$FineFG == "Obligate corallivore"] <- "Corallivore"
ki_full$Trophic[ki_full$FineFG == "Facultative corallivore"] <- "Corallivore"
ki_full$Trophic[ki_full$FineFG == " Facultative corallivore"] <- "Corallivore"
# Detritivores
ki_full$Trophic[ki_full$CoarseFG == "Detritivore"] <- "Detritivore"
# Generalist carnivores
ki_full$Trophic[ki_full$FineFG == "Generalist carnivore"] <- "Generalist carnivore"
# Herbivores
ki_full$Trophic[ki_full$CoarseFG == "Herbivore"] <- "Herbivore"
# Invertivores
ki_full$Trophic[ki_full$FineFG == "Ectoparasites"] <- "Invertivore"
ki_full$Trophic[ki_full$FineFG == "Invertivore"] <- "Invertivore"
ki_full$Trophic[ki_full$FineFG == "Benthic invertivore"] <- "Invertivore"
ki_full$Trophic[ki_full$FineFG == "Benthic intertivore"] <- "Invertivore"
# Onmivores
ki_full$Trophic[ki_full$FineFG == "Benthic omnivore"] <- "Omnivore"
ki_full$Trophic[ki_full$FineFG == "Pelagic omnivore"] <- "Omnivore"
ki_full$Trophic[ki_full$FineFG == "Herbivore/Corallivore"] <- "Omnivore"
ki_full$Trophic[ki_full$CoarseFG == "Herbivore/Planktivore"] <- "Omnivore"
ki_full$Trophic[ki_full$CoarseFG == "Planktivore/Carnivore"] <- "Omnivore"
# Piscivores
ki_full$Trophic[ki_full$FineFG == "Piscivore"] <- "Piscivore"
ki_full$Trophic[ki_full$FineFG == "Diurnal piscivore"] <- "Piscivore"
ki_full$Trophic[ki_full$FineFG == "Nocturnal piscivore"] <- "Piscivore"
# Planktivores
ki_full$Trophic[ki_full$CoarseFG == "Planktivore"] <- "Planktivore"
# Change trophic group assignments of some species
ki_full$Trophic[ki_full$Species == "Caracanthus maculatus"] <- "Generalist carnivore"
ki_full$Trophic[ki_full$Species == "Chaetodon lunula"] <- "Corallivore"
ki_full$Trophic[ki_full$Species == "Chaetodon ulietensis"] <- "Corallivore"
ki_full$Trophic[ki_full$Species == "Cirrhitichthys oxycephalus"] <- "Generalist carnivore"
ki_full$Trophic[ki_full$Species == "Eviota albolineata"] <- "Generalist carnivore"
ki_full$Trophic[ki_full$Species == "Paracirrhites xanthus"] <- "Generalist carnivore"
ki_full$Trophic[ki_full$Species == "Cirrhitops hubbardi"] <- "Generalist carnivore"
# Remove observations that could not be assigned to a trophic group (removes 45 rows)
ki.na <- ki_full[is.na(ki_full$Trophic), ]
ki_full <- ki_full[!(is.na(ki_full$Trophic)), ]
### Order fishing pressure levels
ki_full$f.pressure <- factor(ki_full$f.pressure, levels(factor(ki_full$f.pressure))[c(5,2,3,1,4)])
levels(ki_full$f.pressure)
### Remove observation from RT
ki_full <- ki_full[!grepl("RT", ki_full$Observer), ]
ki_full$Observer <- droplevels(ki_full$Observer)
### Clean rows where surveys cover multiple time periods
ki_full$dso <- paste(ki_full$KI.Date, ki_full$Site, ki_full$Observer, sep = ".")
ki_full$time_of_day[ki_full$dso == "25_07_2011.26.SMW"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "25_07_2011.33.SMW"] <- "AFT"
ki_full$time_of_day[ki_full$dso == "27_07_2011.27.SMW"] <- "MID"
ki_full$time_of_day[ki_full$dso == "28_07_2011.24.SMW"] <- "MID"
ki_full$time_of_day[ki_full$dso == "28_07_2011.38.SMW"] <- "MID"
ki_full$time_of_day[ki_full$dso == "29_07_2011.19.SMW"] <- "AFT"
ki_full$time_of_day[ki_full$dso == "30_07_2011.16.SMW"] <- "MID"
ki_full$time_of_day[ki_full$dso == "31_07_2011.35.SMW"] <- "AFT"
ki_full$time_of_day[ki_full$dso == "01_08_2011.2.SMW"] <- "MID"
ki_full$time_of_day[ki_full$dso == "02_08_2013.19.SC"] <- "MID"
ki_full$time_of_day[ki_full$dso == "25_07_2013.23.JLG"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "25_07_2013.23.SC"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "26_07_2013.3.JLG"] <- "AFT"
ki_full$time_of_day[ki_full$dso == "26_07_2013.3.SC"] <- "AFT"
ki_full$time_of_day[ki_full$dso == "29_07_2013.19.SC"] <- "MID"
ki_full$time_of_day[ki_full$dso == "04_07_2015.27.SC"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "17_07_2015.35.SC"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "17_07_2015.35.SD"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "14_07_2017.19.SD"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "14_07_2017.19.TAP"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "21_07_2017.33.SD"] <- "MID"
ki_full$time_of_day[ki_full$dso == "21_07_2017.33.TAP"] <- "MID"
ki_full$time_of_day[ki_full$dso == "31_07_2017.10.SD"] <- "MORN"
ki_full$time_of_day[ki_full$dso == "31_07_2017.10.TAP"] <- "MORN"
ki_full$time_of_day <- as.factor(ki_full$time_of_day)
levels(ki_full$time_of_day)
ki_full$time_of_day <- factor(ki_full$time_of_day, levels(factor(ki_full$time_of_day))[c(4,3,1,2)])
### Subset to study sites
sites <- c("2", "3", "5", "6", "8", "10", "14", "15", "19", "25", "27", "30", "32", "34", "35", "38")
ki_full <- filter(ki_full, Site %in% sites)
### Add productivity data
waves_prod <- read.csv("KI_wave_prod_data_SESYNC.csv", stringsAsFactors = FALSE)
ki_full$npp_max <- waves_prod$npp_max[match(ki_full$Site, waves_prod$Site)]
### Remove unnecessary rows
ki_full$Species.Code <- NULL
ki_full$Slope <- NULL
ki_full$CoarseFG <- NULL
ki_full$FineFG <- NULL
ki_full$prod <- NULL
ki_full$unique.site <- NULL
ki_full$time_h <- NULL
ki_full$time_m <- NULL
ki_full$site.date <- NULL
ki_full$Time <- NULL
ki_full$Depth <- NULL
ki_full$dso <- NULL
ki_full$Note <- NULL
ki_full$lat <- NULL
ki_full$lon <- NULL
ki_full$Family <- NULL
### Rearrange columns
ki_fish <- ki_full[, c(1,8,2,4,3,5,18,6,7,9:13,15:17,14,19)]
### Change some variable names
colnames(ki_fish)[colnames(ki_fish) == "KI.Date"] <- "ki.date"
colnames(ki_fish)[colnames(ki_fish) == "Year"] <- "year"
colnames(ki_fish)[colnames(ki_fish) == "Site"] <- "site"
colnames(ki_fish)[colnames(ki_fish) == "Transect"] <- "transect"
colnames(ki_fish)[colnames(ki_fish) == "Observer"] <- "observer"
colnames(ki_fish)[colnames(ki_fish) == "Species"] <- "species"
colnames(ki_fish)[colnames(ki_fish) == "Trophic"] <- "trophic"
colnames(ki_fish)[colnames(ki_fish) == "MASS"] <- "mass"
colnames(ki_fish)[colnames(ki_fish) == "Size..cm."] <- "size"
colnames(ki_fish)[colnames(ki_fish) == "Number"] <- "number"
colnames(ki_fish)[colnames(ki_fish) == "LENGTH_CONVERSION_FACTOR"] <- "lcf"
## Drop factor levels
ki_fish$year <- droplevels(ki_fish$year)
View(ki_fish)
str(ki_fish)
ki_fish$site <- droplevels(ki_fish$site)
str(ki_fish)
### Save and quit
save(ki_fish, file = "KI_fish_data_raw.Rdata")
# Load necessary packages
library(dplyr)
# Load the data
load("KI_fish_data_raw.Rdata")
ki_small <- ki_fish[ki_fish$length < 20, ]
ki_large <- ki_fish[ki_fish$length >= 20, ]
ki_small$number <- ki_small$number*2
ki_fish <- rbind(ki_small, ki_large)
# Remove sharks and jacks (due to potential survey biases)
ki_fish <- ki_fish[!grepl("Caranx", ki_fish$species), ] # Removes 29 observations
ki_fish <- ki_fish[!grepl("Carangoides", ki_fish$species), ] # Removes 3 observations
ki_fish <- ki_fish[!grepl("Scomberoides", ki_fish$species), ] # Removes 14 observations
ki_fish <- ki_fish[!grepl("Carcharhinus", ki_fish$species), ] # Removes 1 observation
# Calculate biomass
ki_fish$biomass <- ki_fish$number * ki_fish$mass
# Create a separate data frame for each functional group
ki_coral <- ki_fish[ki_fish$trophic == "Corallivore", ]
ki_det <- ki_fish[ki_fish$trophic == "Detritivore", ]
ki_gen <- ki_fish[ki_fish$trophic == "Generalist carnivore", ]
ki_herb <- ki_fish[ki_fish$trophic == "Herbivore", ]
ki_inv <- ki_fish[ki_fish$trophic == "Invertivore", ]
ki_omn <- ki_fish[ki_fish$trophic == "Omnivore", ]
ki_pisc <- ki_fish[ki_fish$trophic == "Piscivore", ]
ki_plank <- ki_fish[ki_fish$trophic == "Planktivore", ]
ki_BM <- ki_fish %>% group_by(heat, year, ki.date, site, observer, f.pressure, npp_max, time_of_day) %>%
summarise(BM_total = sum(biomass)/300)
# Note that f.pressure and npp_max both map to site, while time_of_day maps to the combination of ki.date and site; these
# variables are included in the above calculation to ensure that they are retained in the final dataset, but are excluded
# from subsequent calculations for the sake or simplicity
## Functional group biomass
# Corallivores
ki_BM_coral <- ki_coral %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_coral = sum(biomass)/300)
# Detritivores
ki_BM_det <- ki_det %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_det = sum(biomass)/300)
# Generalist carnivores
ki_BM_gen <- ki_gen %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_gen = sum(biomass)/300)
# Herbivores
ki_BM_herb <- ki_herb %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_herb = sum(biomass)/300)
# Invertivores
ki_BM_inv <- ki_inv %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_inv = sum(biomass)/300)
# Omnivores
ki_BM_omn <- ki_omn %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_omn = sum(biomass)/300)
# Piscivores
ki_BM_pisc <- ki_pisc %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_pisc = sum(biomass)/300)
# Planktivores
ki_BM_plank <- ki_plank %>% group_by(heat, year, ki.date, site, observer) %>% summarise(BM_plank = sum(biomass)/300)
#################
### ABUNDANCE ###
#################
## Total abundance
ki_AB <- ki_fish %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_total = sum(number))
## Functional group abundance
# Corallivores
ki_AB_coral <- ki_coral %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_coral = sum(number))
# Detritivores
ki_AB_det <- ki_det %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_det = sum(number))
# Generalist carnivores
ki_AB_gen <- ki_gen %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_gen = sum(number))
# Herbivores
ki_AB_herb <- ki_herb %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_herb = sum(number))
# Invertivores
ki_AB_inv <- ki_inv %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_inv = sum(number))
# Omnivores
ki_AB_omn <- ki_omn %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_omn = sum(number))
# Piscivores
ki_AB_pisc <- ki_pisc %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_pisc = sum(number))
# Planktivores
ki_AB_plank <- ki_plank %>% group_by(heat, year, ki.date, site, observer) %>% summarise(AB_plank = sum(number))
########################
### species RICHNESS ###
########################
# Remove observations that were not identified to species level
ki_fish_SR <- ki_fish
ki_fish_SR <- ki_fish_SR[!grepl("Acanthurus sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Blenniidae sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Chlorurus sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Cirripectes sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Epinephelus sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Gymnothorax sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Halichoeres sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Kyphosus sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Parapercis sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Pervagor sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Plagiotremus sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Pseudanthias sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Ptereleotris sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Pterocaesio sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Pterois sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Scarus sp", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Synodus sp.", ki_fish_SR$species), ]
ki_fish_SR <- ki_fish_SR[!grepl("Valenciennea sp.", ki_fish_SR$species), ]
# Total species richness
ki_SR <- ki_fish_SR %>% group_by(heat, year, ki.date, site, observer) %>% summarise(SR_total = n_distinct(species))
# Create a unique identifier to match ... by combining the site, date, and observer values for each ...
ki_fish_sum$dso <- paste(ki_fish_sum$site, ki_fish_sum$ki.date, ki_fish_sum$observer, sep = "-")
# Rename the ki_BM data frame
ki_fish_sum <- ki_BM
ki_fish_sum$dso <- paste(ki_fish_sum$site, ki_fish_sum$ki.date, ki_fish_sum$observer, sep = "-")
ki_BM_coral$dso <- paste(ki_BM_coral$site, ki_BM_coral$ki.date, ki_BM_coral$observer, sep = "-")
ki_BM_det$dso <- paste(ki_BM_det$site, ki_BM_det$ki.date, ki_BM_det$observer, sep = "-")
ki_BM_gen$dso <- paste(ki_BM_gen$site, ki_BM_gen$ki.date, ki_BM_gen$observer, sep = "-")
ki_BM_herb$dso <- paste(ki_BM_herb$site, ki_BM_herb$ki.date, ki_BM_herb$observer, sep = "-")
ki_BM_inv$dso <- paste(ki_BM_inv$site, ki_BM_inv$ki.date, ki_BM_inv$observer, sep = "-")
ki_BM_omn$dso <- paste(ki_BM_omn$site, ki_BM_omn$ki.date, ki_BM_omn$observer, sep = "-")
ki_BM_pisc$dso <- paste(ki_BM_pisc$site, ki_BM_pisc$ki.date, ki_BM_pisc$observer, sep = "-")
ki_BM_plank$dso <- paste(ki_BM_plank$site, ki_BM_plank$ki.date, ki_BM_plank$observer, sep = "-")
ki_AB$dso <- paste(ki_AB$site, ki_AB$ki.date, ki_AB$observer, sep = "-")
ki_AB_coral$dso <- paste(ki_AB_coral$site, ki_AB_coral$ki.date, ki_AB_coral$observer, sep = "-")
ki_AB_det$dso <- paste(ki_AB_det$site, ki_AB_det$ki.date, ki_AB_det$observer, sep = "-")
ki_AB_gen$dso <- paste(ki_AB_gen$site, ki_AB_gen$ki.date, ki_AB_gen$observer, sep = "-")
ki_AB_herb$dso <- paste(ki_AB_herb$site, ki_AB_herb$ki.date, ki_AB_herb$observer, sep = "-")
ki_AB_inv$dso <- paste(ki_AB_inv$site, ki_AB_inv$ki.date, ki_AB_inv$observer, sep = "-")
ki_AB_omn$dso <- paste(ki_AB_omn$site, ki_AB_omn$ki.date, ki_AB_omn$observer, sep = "-")
ki_AB_pisc$dso <- paste(ki_AB_pisc$site, ki_AB_pisc$ki.date, ki_AB_pisc$observer, sep = "-")
ki_AB_plank$dso <- paste(ki_AB_plank$site, ki_AB_plank$ki.date, ki_AB_plank$observer, sep = "-")
ki_SR$dso <- paste(ki_SR$site, ki_SR$ki.date, ki_SR$observer, sep = "-")
ki_fish_sum$BM_coral <- ki_BM_coral$BM_coral[match(ki_fish_sum$dso, ki_BM_coral$dso)]
ki_fish_sum$BM_det <- ki_BM_det$BM_det[match(ki_fish_sum$dso, ki_BM_det$dso)]
ki_fish_sum$BM_gen <- ki_BM_gen$BM_gen[match(ki_fish_sum$dso, ki_BM_gen$dso)]
ki_fish_sum$BM_herb <- ki_BM_herb$BM_herb[match(ki_fish_sum$dso, ki_BM_herb$dso)]
ki_fish_sum$BM_inv <- ki_BM_inv$BM_inv[match(ki_fish_sum$dso, ki_BM_inv$dso)]
ki_fish_sum$BM_omn <- ki_BM_omn$BM_omn[match(ki_fish_sum$dso, ki_BM_omn$dso)]
ki_fish_sum$BM_pisc <- ki_BM_pisc$BM_pisc[match(ki_fish_sum$dso, ki_BM_pisc$dso)]
ki_fish_sum$BM_plank <- ki_BM_plank$BM_plank[match(ki_fish_sum$dso, ki_BM_plank$dso)]
ki_fish_sum$AB_total <- ki_AB$AB_total[match(ki_fish_sum$dso, ki_AB$dso)]
ki_fish_sum$AB_coral <- ki_AB_coral$AB_coral[match(ki_fish_sum$dso, ki_AB_coral$dso)]
ki_fish_sum$AB_det <- ki_AB_det$AB_det[match(ki_fish_sum$dso, ki_AB_det$dso)]
ki_fish_sum$AB_gen <- ki_AB_gen$AB_gen[match(ki_fish_sum$dso, ki_AB_gen$dso)]
ki_fish_sum$AB_herb <- ki_AB_herb$AB_herb[match(ki_fish_sum$dso, ki_AB_herb$dso)]
ki_fish_sum$AB_inv <- ki_AB_inv$AB_inv[match(ki_fish_sum$dso, ki_AB_inv$dso)]
ki_fish_sum$AB_omn <- ki_AB_omn$AB_omn[match(ki_fish_sum$dso, ki_AB_omn$dso)]
ki_fish_sum$AB_pisc <- ki_AB_pisc$AB_pisc[match(ki_fish_sum$dso, ki_AB_pisc$dso)]
ki_fish_sum$AB_plank <- ki_AB_plank$AB_plank[match(ki_fish_sum$dso, ki_AB_plank$dso)]
ki_fish_sum$SR_total <- ki_SR$SR_total[match(ki_fish_sum$dso, ki_SR$dso)]
# Assign a value of 0 to any NA values
ki_fish_sum[is.na(ki_fish_sum)] <- 0
# Check for NA values anywhere in the data frame
any(is.na(ki_fish_sum))
View(ki_fish_sum)
## Save and quit
save(ki_fish_sum, file = "KI_fish_data_sum.Rdata")
library(dplyr)
library(lme4)
library(arm)
library(optimx)
library(glmmADMB)
setwd("C:/Users/jennm/Documents/GitRepos/Magel_etal_2019/data")
## Load the data
load("ki_fish_data_sum.Rdata")
## Standardize continuous predictor variables
ki_fish_sum$npp_max_z <- rescale(ki_fish_sum$npp_max)
View(ki_fish_sum)
## Zeroes
# Calculating the number of non-zero observations for each trophic group
zeroes <- as.data.frame(colSums(ki_fish_sum[, c(20:27)] != 0))
zeroes
